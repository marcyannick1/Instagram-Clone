// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  username         String         @unique
  name             String
  email            String         @unique
  password         String
  photo            String?        @default("https://res.cloudinary.com/dqkvgnqhp/image/upload/v1685311561/Instagram-Clone/profil/avatar.jpg")
  bio              String?
  suivies          Suscribtions[] @relation("Suscriber")
  followers        Suscribtions[] @relation("SuscriberTo")
  posts            Posts[]
  likes            Likes[]
  comments         Comments[]
  Favoris          Favoris[]
  messagesSend     Messages[]     @relation("Sender")
  messagesReceived Messages[]     @relation("Receiver")
}

model Suscribtions {
  id            Int       @id @default(autoincrement())
  suscriber     User      @relation("Suscriber", fields: [suscriberId], references: [id])
  suscriberId   Int
  suscriberTo   User      @relation("SuscriberTo", fields: [suscriberToId], references: [id])
  suscriberToId Int
  date          DateTime? @default(now()) @db.Timestamp(3)
}

model Posts {
  id          Int        @id @default(autoincrement())
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  date        DateTime?  @default(now()) @db.Timestamp(3)
  description String?
  media       Medias[]
  likes       Likes[]
  comments    Comments[]
  Favoris     Favoris[]
}

model Medias {
  id     Int    @id @default(autoincrement())
  url    String
  post   Posts  @relation(fields: [postId], references: [id])
  postId Int
}

model Likes {
  id     Int       @id @default(autoincrement())
  user   User      @relation(fields: [userId], references: [id])
  userId Int
  post   Posts     @relation(fields: [postId], references: [id])
  postId Int
  date   DateTime? @default(now()) @db.Timestamp(3)
}

model Comments {
  id      Int       @id @default(autoincrement())
  content String
  user    User      @relation(fields: [userId], references: [id])
  userId  Int
  post    Posts     @relation(fields: [postId], references: [id])
  postId  Int
  date    DateTime? @default(now()) @db.Timestamp(3)
}

model Favoris {
  id     Int       @id @default(autoincrement())
  user   User      @relation(fields: [userId], references: [id])
  userId Int
  post   Posts     @relation(fields: [postId], references: [id])
  postId Int
  date   DateTime? @default(now()) @db.Timestamp(3)
}

model Messages {
  id         Int       @id @default(autoincrement())
  sender     User      @relation("Sender", fields: [senderId], references: [id])
  senderId   Int
  receiver   User      @relation("Receiver", fields: [receiverId], references: [id])
  receiverId Int
  date       DateTime? @default(now()) @db.Timestamp(3)
}
